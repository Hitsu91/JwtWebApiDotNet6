// <auto-generated />
using System;
using JwtWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JwtWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220207104844_Roles")]
    partial class Roles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.Property<Guid>("CharactersId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("TEXT");

                    b.HasKey("CharactersId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CharacterSkill");
                });

            modelBuilder.Entity("JwtWebApi.Models.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("JwtWebApi.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c3c9a4e-704d-487a-95c3-45b943b9928f"),
                            Damage = 300,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = new Guid("87b0b23e-1de2-4298-902e-c5672f855390"),
                            Damage = 20,
                            Name = "Frenzy"
                        });
                });

            modelBuilder.Entity("JwtWebApi.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bb84b92-60c9-4375-a08a-c1d46935f573"),
                            PasswordHash = new byte[] { 216, 200, 183, 194, 215, 157, 177, 76, 99, 163, 137, 41, 230, 227, 156, 48, 97, 201, 32, 240, 192, 83, 29, 219, 184, 165, 143, 129, 11, 132, 177, 174, 30, 39, 2, 36, 154, 130, 55, 58, 61, 103, 229, 107, 201, 9, 130, 141, 27, 198, 91, 215, 123, 158, 154, 199, 50, 251, 84, 29, 134, 155, 92, 157 },
                            PasswordSalt = new byte[] { 171, 186, 103, 104, 136, 6, 210, 197, 157, 162, 137, 65, 191, 60, 47, 228, 167, 115, 221, 222, 242, 111, 188, 60, 63, 113, 42, 2, 99, 14, 125, 92, 133, 164, 41, 58, 150, 135, 57, 88, 82, 187, 181, 6, 246, 178, 74, 22, 254, 183, 48, 134, 6, 190, 118, 249, 207, 221, 46, 219, 171, 68, 184, 180, 98, 99, 70, 234, 34, 160, 207, 227, 242, 97, 170, 61, 205, 231, 68, 39, 133, 166, 176, 81, 36, 134, 93, 175, 193, 51, 223, 177, 200, 222, 54, 160, 211, 184, 57, 133, 234, 250, 246, 59, 60, 151, 123, 45, 172, 82, 8, 139, 199, 4, 120, 185, 166, 212, 17, 181, 250, 74, 131, 165, 21, 200, 154, 250 },
                            Role = 1,
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("JwtWebApi.Models.Weapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.HasOne("JwtWebApi.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JwtWebApi.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JwtWebApi.Models.Character", b =>
                {
                    b.HasOne("JwtWebApi.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JwtWebApi.Models.Weapon", b =>
                {
                    b.HasOne("JwtWebApi.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("JwtWebApi.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("JwtWebApi.Models.Character", b =>
                {
                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("JwtWebApi.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
